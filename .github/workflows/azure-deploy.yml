name: Deploy to Azure App Service

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m venv env
        source env/bin/activate
        pip install -r requirements.txt
#    - name: Generate SQL migrations
#      run: |
#        source env/bin/activate
#        python rcjaRegistration/manage.py makemigrations --dry-run > migrations.sql
#    - name: Save migrations as an artifact
#      uses: actions/upload-artifact@v2
#      with:
#        name: migrations.sql
#        path: migrations.sql
    - name: 'Docker login'
      uses: azure/docker-login@v1
      with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and push Docker image
      run: |
        docker build . -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/rcja-registration:${{ github.sha }}
        docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/rcja-registration:${{ github.sha }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: azure-prod
    steps:
    - name: Deploy to Azure App Service
      uses: azure/webapps-deploy@v2
      with:
        app-name: rcjaregistration
        container-image: ${{ secrets.REGISTRY_LOGIN_SERVER }}/rcja-registration:${{ github.sha }}
        slot-name: production
        resource-group: rcja.app
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        client-secret: ${{ secrets.AZURE_CLIENT_SECRET }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}


