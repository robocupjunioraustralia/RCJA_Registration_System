# Generated by Django 4.2.4 on 2023-09-08 15:51

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('schools', '0007_alter_school_state'),
    ]

    operations = [
        migrations.AlterField(
            model_name='campus',
            name='name',
            field=models.CharField(max_length=100, validators=[django.core.validators.RegexValidator(message="Contains character that isn't allowed. Allowed characters are a-z, A-Z, 0-9, -_ and space.", regex='^[0-9a-zA-Z \\-\\_]*$')], verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='campus',
            name='postcode',
            field=models.CharField(blank=True, max_length=4, null=True, validators=[django.core.validators.RegexValidator(message='Postcode must be numeric', regex='^[0-9]*$'), django.core.validators.MinLengthValidator(4, message='Postcode too short')], verbose_name='Postcode'),
        ),
        migrations.AlterField(
            model_name='school',
            name='abbreviation',
            field=models.CharField(help_text='Abbreviation is used in the schedule and scoring system', max_length=5, unique=True, validators=[django.core.validators.RegexValidator(message="Contains character that isn't allowed. Allowed characters are a-z, A-Z, 0-9, -_ and space.", regex='^[0-9a-zA-Z \\-\\_]*$'), django.core.validators.MinLengthValidator(3, message='Abbreviation must be at least three characters')], verbose_name='Abbreviation'),
        ),
        migrations.AlterField(
            model_name='school',
            name='name',
            field=models.CharField(max_length=100, unique=True, validators=[django.core.validators.RegexValidator(message="Contains character that isn't allowed. Allowed characters are a-z, A-Z, 0-9, -_ and space.", regex='^[0-9a-zA-Z \\-\\_]*$')], verbose_name='Name'),
        ),
        migrations.AlterField(
            model_name='school',
            name='postcode',
            field=models.CharField(blank=True, max_length=4, null=True, validators=[django.core.validators.RegexValidator(message='Postcode must be numeric', regex='^[0-9]*$'), django.core.validators.MinLengthValidator(4, message='Postcode too short')], verbose_name='Postcode'),
        ),
    ]
