# Generated by Django 4.2.16 on 2025-01-19 12:07

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('events', '0024_alter_availabledivision_division'),
    ]

    operations = [
        migrations.RenameField(
            model_name='event',
            old_name='event_billingType',
            new_name='competition_billingType',
        ),
        migrations.RenameField(
            model_name='event',
            old_name='event_specialRateFee',
            new_name='competition_specialRateFee',
        ),
        migrations.RenameField(
            model_name='event',
            old_name='event_specialRateNumber',
            new_name='competition_specialRateNumber',
        ),
        migrations.RenameField(
            model_name='event',
            old_name='event_defaultEntryFee',
            new_name='competition_defaultEntryFee',
        ),
        migrations.AlterField(
            model_name='event',
            name='competition_defaultEntryFee',
            field=models.PositiveIntegerField(blank=True, null=True, verbose_name='Default entry fee'),
        ),
        migrations.AlterField(
            model_name='event',
            name='endDate',
            field=models.DateField(blank=True, null=True, verbose_name='Event end date'),
        ),
        migrations.AlterField(
            model_name='event',
            name='registrationsCloseDate',
            field=models.DateField(blank=True, null=True, verbose_name='Registration close date'),
        ),
        migrations.AlterField(
            model_name='event',
            name='registrationsOpenDate',
            field=models.DateField(blank=True, null=True, verbose_name='Registrations open date'),
        ),
        migrations.AlterField(
            model_name='event',
            name='startDate',
            field=models.DateField(blank=True, null=True, verbose_name='Event start date'),
        ),
        migrations.AddConstraint(
            model_name='event',
            constraint=models.CheckConstraint(check=models.Q(('eventType', 'workshop'), ('eventType', 'competition'), _connector='OR'), name='event_type_check'),
        ),
    ]
